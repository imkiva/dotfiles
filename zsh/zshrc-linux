# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search docker github colored-man-pages screen gradle sudo)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

function append-path() {
  export PATH="$PATH:$1"
}

export GPG_TTY=$(tty)

alias ls='lsd -F --color=auto'
alias l='ls'
alias ll='ls -lh'
alias la='ls -a'
alias lla='ll -a'
alias grep='grep --color=auto'

# editor settings
# export EDITOR='emacs'
# alias ec="emacsclient --alternate-editor="
# alias e='ec -nw'
# alias vim='e'
# alias vi='e'
# alias ee='idea -e'

# agda
# append-path "/Users/kiva/git/archives/agda/dist-newstyle/install"
# export Agda_datadir="/Users/kiva/git/archives/agda/src/data"

# force UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# zsh envs
TIMEFMT='%J'$'\n'\
'user: %U, system: %S, cpu percentage: %P, total time: %*E'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M KB'$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

HISTSIZE=999999999
SAVEHIST=999999999

# for RISC-V compiler development
export R="/home/kiva/tools/riscv"
export S="$R/sysroot"
export T="riscv64-unknown-linux-gnu"

append-path "/home/kiva/tools/bin"
append-path "$R/bin"

# for quick access to development clang
alias @="/home/kiva/buildhost/bin/clang"
alias @@="/home/kiva/tools/rllvm/riscv/bin/clang"
alias _="qemu-riscv64 -L $S"

# zsh-history-substring-search
bindkey "$key[Up]" history-substring-search-up
bindkey "$key[Down]" history-substring-search-down

function get_windows_dpi() {
  local WindowMetricsAppliedDPI=$("/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe" "(Get-ItemProperty -Path 'HKCU:\\Control Panel\\Desktop\\WindowMetrics').AppliedDPI")
  WindowMetricsAppliedDPI=${WindowMetricsAppliedDPI%$'\r'}
  # local dpi_scale=$(bc <<<"scale=2; $WindowMetricsAppliedDPI / 96")
  # ^ the above calculates the DPI to scale factor, like 2.0
  echo "$WindowMetricsAppliedDPI"
}

function wslg_dpi_scale() {
  if [[ "$(xrdb -query)"x == ""x ]]; then
    #local dpi_scale="$(get_windows_dpi)"
    local dpi_scale=192
    cat > ~/.Xresource <<EOF
Xft.dpi: $dpi_scale

! These might also be useful depending on your monitor and personal preference:
Xft.autohint: 0
Xft.lcdfilter:  lcddefault
Xft.hintstyle:  hintfull
Xft.hinting: 1
Xft.antialias: 1
Xft.rgba: rgb
EOF
    xrdb -merge ~/.Xresource
    echo "Done setting DPI Scale to $dpi_scale"
  fi
}

[ -d /mnt/wslg/runtime-dir ] && wslg_dpi_scale

# Tmux is good
case $- in *i*)
  [ -z "$TMUX" ] && { exec tmux new-session; }
esac
